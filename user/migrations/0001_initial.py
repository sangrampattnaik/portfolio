# Generated by Django 3.2.7 on 2021-09-23 16:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('full_name', models.CharField(help_text='Short Name e.g Chiku', max_length=100, verbose_name='Full Name')),
                ('short_name', models.CharField(help_text='Short Name e.g Chiku', max_length=100, verbose_name='Short Name')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserDetails',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('mobile', models.CharField(max_length=10, unique=True, verbose_name='Mobile Number')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('designation', models.CharField(max_length=100, verbose_name='Designation')),
                ('description', models.TextField(verbose_name='Description')),
                ('contact_me_email', models.EmailField(blank=True, help_text='It will on display on Contact me email', max_length=254, null=True, verbose_name='Contact me email')),
                ('about_me_text', models.TextField(verbose_name='About me')),
                ('about_image', models.ImageField(upload_to='image', verbose_name='About Image')),
                ('years_of_exp', models.PositiveIntegerField(verbose_name='Experience in years')),
                ('companies_worked', models.PositiveIntegerField(verbose_name='Number of companies worked')),
                ('completed_projects', models.PositiveIntegerField(verbose_name='Number of Completed projecrts')),
                ('cv_in_pdf', models.FileField(help_text='.pdf format must be', upload_to='', verbose_name='Resume/CV')),
                ('contact_me_new_project_image', models.ImageField(upload_to='image', verbose_name='Contact me image')),
                ('facebook_link', models.URLField(blank=True, null=True, verbose_name='Facebook link')),
                ('linkedin_link', models.URLField(blank=True, null=True, verbose_name='Linkedin link')),
                ('github_link', models.URLField(blank=True, null=True, verbose_name='Github link')),
                ('youtube_link', models.URLField(blank=True, null=True, verbose_name='Youtube Link')),
                ('skype_link', models.URLField(blank=True, null=True, verbose_name='Skype Link')),
                ('tweeter_link', models.URLField(blank=True, null=True, verbose_name='Tweeter Link')),
                ('instagram_link', models.URLField(blank=True, null=True, verbose_name='Instagra Link')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_details', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('skill_title', models.CharField(max_length=100, verbose_name='Skill')),
                ('skill_experience', models.PositiveIntegerField(verbose_name='Skill Experience')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='user.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SkillAttribute',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Attribute Name')),
                ('percentage', models.PositiveIntegerField(verbose_name='Skill percentage')),
                ('skill', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skill_attributes', to='user.skills')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('project_name', models.CharField(help_text='project name', max_length=64, verbose_name='Project name')),
                ('project_type', models.CharField(choices=[('company', 'COMPANY'), ('personal', 'PERSONAL')], help_text='project type', max_length=64, verbose_name='Project type')),
                ('company_name', models.CharField(help_text='company name', max_length=64, verbose_name='Company name')),
                ('start_date', models.DateField(blank=True, help_text='start date', null=True)),
                ('end_date', models.DateField(blank=True, help_text='end date', null=True)),
                ('project_link', models.URLField(blank=True, null=True, verbose_name='project link')),
                ('github_repository_link', models.URLField(blank=True, null=True, verbose_name='Github repository link')),
                ('user_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='user.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=60, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('portfolio_image', models.ImageField(upload_to='')),
                ('portfolio_title', models.CharField(help_text='portfolio title', max_length=64, verbose_name='Portfolio title')),
                ('portfolio_description', models.TextField(verbose_name='Portfolio description')),
                ('link', models.URLField(verbose_name='Portfolio link')),
                ('user_details', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portfolio', to='user.userdetails')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
